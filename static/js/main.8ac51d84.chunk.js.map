{"version":3,"sources":["api.ts","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Loader","span","props","theme","accentColor2","Header","header","Title","h1","accentColor","CoinsList","ul","Coin","li","textColor","bgColor","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","id","state","name","alt","src","symbol","toLocaleLowerCase","Router","path","element","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"iOAAMA,EAAQ,iCAGP,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,U,yBCE1DC,EAAYC,IAAOC,IAAV,wFAMTC,EAASF,IAAOG,KAAV,qIAID,SAACC,GAAD,OAAWA,EAAMC,MAAMC,gBAG5BC,EAASP,IAAOQ,OAAV,mIAQNC,EAAQT,IAAOU,GAAV,qFAEA,SAACN,GAAD,OAAWA,EAAMC,MAAMM,eAG5BC,EAAYZ,IAAOa,GAAV,0BAETC,EAAOd,IAAOe,GAAV,wWACY,SAACX,GAAD,OAAWA,EAAMC,MAAMW,aAClC,SAACZ,GAAD,OAAWA,EAAMC,MAAMY,WAYnB,SAACb,GAAD,OAAWA,EAAMC,MAAMC,gBAMhCY,EAAMlB,IAAOmB,IAAV,+HAkDMC,MAhCf,WACE,MAA4BC,mBAA0B,WAAY3B,GAA1D4B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAEnB,OACE,eAACxB,EAAD,WACE,cAACyB,EAAA,EAAD,UACE,kDAEF,cAACjB,EAAD,UACE,cAACE,EAAD,4BAEDa,EACC,cAACpB,EAAD,yBAEA,cAACU,EAAD,iBACGW,QADH,IACGA,OADH,EACGA,EAAME,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACvB,cAACb,EAAD,UACE,eAAC,IAAD,CAAMc,GAAE,gBAAWD,EAAKE,IAAMC,MAAO,CAAEC,KAAMJ,EAAKI,MAAlD,UACE,cAACb,EAAD,CACEc,IAAKL,EAAKI,KACVE,IAAG,qDAAgDN,EAAKO,OAAOC,uBAEhER,EAAKI,KALR,cADSJ,EAAKE,aCpEbO,I,EAAAA,EAdf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,W,QCL3BC,EAAcC,YAAH,+zCAoDK,SAACpC,GAAD,OAAWA,EAAMC,MAAMY,WAClC,SAACb,GAAD,OAAWA,EAAMC,MAAMW,aAkBnByB,MAVf,WACE,OACE,qCACE,cAACF,EAAD,IACA,cAAC,EAAD,IACA,cAAC,qBAAD,CAAoBG,eAAe,QChEnCC,EAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,cAAC,IAAD,CAAetC,MCVc,CACjCY,QAAS,UACTD,UAAW,WACXL,YAAa,UACbL,aAAc,WDMV,SACE,cAAC,EAAD,UAIN2C,SAASC,eAAe,W","file":"static/js/main.8ac51d84.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\n// All Coins\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\n// Coin Info\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\n// Coin Price\nexport function fetchCoinPrice(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\n// Coin History (4 weeks)\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 28; // 28 days\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0 1rem;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Loader = styled.span`\n  display: flex;\n  justify-content: center;\n  font-size: max(min(1.5rem, 20px), 15px);\n  color: ${(props) => props.theme.accentColor2};\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 1rem;\n  margin-bottom: 0.5rem;\n  font-size: max(min(1.5rem, 20px), 15px);\n  a {\n    transition: color 0.1s ease-in-out;\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor2};\n      font-weight: 600;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  width: 2rem;\n  height: 2rem;\n  min-width: 30px;\n  min-height: 30px;\n  margin-right: 0.5rem;\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Crypto Coin</title>\n      </Helmet>\n      <Header>\n        <Title>Crypto Coin</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={`coins/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  alt={coin.name}\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLocaleLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Chart from \"./routes/Chart\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\nimport Price from \"./routes/Price\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Coins />} />\n        {/* <Route path=\"/coins/:coinId/\" element={<Coin />}>\n          <Route path=\"chart\" element={<Chart />} />\n          <Route path=\"price\" element={<Price />} />\n        </Route> */}\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\n// reset styles\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nhtml {\n  font-size: 2vmin;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#222222\",\n  textColor: \" #FAF8FF\",\n  accentColor: \"#00C896\",\n  accentColor2: \"#FF00FF\",\n};\n"],"sourceRoot":""}