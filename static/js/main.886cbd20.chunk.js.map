{"version":3,"sources":["Components/Header.tsx","Routes/Home.tsx","api.tsx","utils.ts","Routes/Search.tsx","Routes/TV.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darkWhite","lightWhite","Circle","span","Search","form","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","navVariants","top","backgroundColor","scroll","Header","offset","useState","searchOpen","setSearchOpen","isHome","useMatch","isTv","inputAnimation","useAnimation","navAnimation","scrollYProgress","useViewportScroll","toggleSearchIcon","start","scaleX","prev","useEffect","onChange","get","navigate","useNavigate","useForm","register","handleSubmit","variants","animate","initial","to","whileHover","xmlns","width","height","viewBox","path","d","layoutId","onSubmit","data","console","log","keyword","onClick","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","a","fetch","request","json","response","makeImagePath","id","format","window","innerWidth","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","CardInfo","black","lightDark","Overlay","BigCard","BigCardCover","BigCardTitle","h3","BigCardOverview","rowVariants","hidden","x","visible","exit","BoxVariants","scale","hover","y","innerHeight","delay","duration","type","CardInfoVariants","opacity","Home","CardMovieMatch","scrollY","useQuery","isLoading","index","setIndex","leaving","setLeaving","clickedCard","params","movieId","results","find","movie","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","slice","map","style","backgroundImage","location","useLocation","URLSearchParams","search","position","Tv","App","element","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","deepDark","dark","document","getElementById"],"mappings":"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","file":"static/js/main.886cbd20.chunk.js","sourcesContent":["import { Link, useMatch, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport {\n  motion,\n  useAnimation,\n  useViewportScroll,\n  Variants,\n} from \"framer-motion\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  color: white;\n  font-size: max(0.5rem, 16px);\n  padding: min(0.6rem, 10px) 2.5rem;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 2rem;\n  width: min(4.5rem, 100px);\n  height: min(1.2rem, 25px);\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 0.3rem;\n    stroke: ${(props) => props.theme.red};\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 0.8rem;\n  color: ${(props) => props.theme.white.darkWhite};\n  transition: color 0.3 ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &::hover {\n    color: ${(props) => props.theme.white.lightWhite};\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 0.3rem;\n  height: 0.3rem;\n  max-width: 5px;\n  max-height: 5px;\n  background-color: ${(props) => props.theme.red};\n  border-radius: 50%;\n  bottom: -0.2rem;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n`;\n\nconst Search = styled.form`\n  display: flex;\n  align-items: center;\n  color: white;\n  svg {\n    height: min(1rem, 25px);\n  }\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  padding: min(0.1rem, 5px) min(0.2rem, 10px);\n  color: white;\n  font-size: min(1rem, 16px);\n  background-color: transparent;\n  border: 0.1rem solid ${(props) => props.theme.white.lightWhite};\n`;\n\n// for animation\nconst logoVariants: Variants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [1, 0, 1],\n    transition: {\n      repeat: 2,\n    },\n  },\n};\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const isHome = useMatch(\"/\");\n  const isTv = useMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollYProgress } = useViewportScroll();\n\n  const toggleSearchIcon = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({\n        scaleX: 1,\n      });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n\n  useEffect(() => {\n    scrollYProgress.onChange(() => {\n      if (scrollYProgress.get() > 0.1) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollYProgress, navAnimation]);\n\n  const navigate = useNavigate();\n  const { register, handleSubmit } = useForm<IForm>();\n\n  const onValid = (data: IForm) => {\n    console.log(data);\n    navigate(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Link to=\"/\">\n          <Logo\n            variants={logoVariants}\n            initial=\"normal\"\n            whileHover=\"active\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1024\"\n            height=\"276.742\"\n            viewBox=\"0 0 1024 276.742\"\n          >\n            <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n          </Logo>\n        </Link>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {isHome ? <Circle layoutId=\"circle\" /> : null}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              TV {isTv ? <Circle layoutId=\"circle\" /> : null}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          {searchOpen ? (\n            <motion.svg\n              onClick={toggleSearchIcon}\n              layoutId=\"input\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </motion.svg>\n          ) : null}\n          {searchOpen ? (\n            <Input\n              {...register(\"keyword\", { required: true, minLength: 2 })}\n              layoutId=\"input\"\n              animate={inputAnimation}\n              placeholder=\"Titles, people, genres\"\n            />\n          ) : null}\n          {searchOpen ? null : (\n            <motion.svg\n              onClick={toggleSearchIcon}\n              layoutId=\"input\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </motion.svg>\n          )}\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useNavigate, useMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  motion,\n  AnimatePresence,\n  Variants,\n  useViewportScroll,\n} from \"framer-motion\";\nimport { getMovies } from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\n// Card offest\nlet offset: number;\nif (window.innerWidth < 400) {\n  offset = 2;\n} else if (window.innerWidth < 768) {\n  offset = 4;\n} else {\n  offset = 6;\n}\n\n// Style\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n\nconst Loader = styled.span`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: min(3rem, 60px);\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Title = styled.h2`\n  font-size: min(3rem, 60px);\n  margin-bottom: min(0.5rem, 10px);\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst Overview = styled.p`\n  font-size: min(1.5rem, 30px);\n  width: 50%;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -10rem;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 0.2rem;\n  position: absolute;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media screen and (max-width: 450px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  height: 6rem;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst CardInfo = styled(motion.div)`\n  padding: min(0.5rem, 14px);\n  background-color: ${(props) => props.theme.black.lightDark};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: min(0.5rem, 12px);\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigCard = styled(motion.div)`\n  position: absolute;\n  width: 50vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.black.lightDark};\n  overflow: hidden;\n  border-radius: 1rem;\n`;\n\nconst BigCardCover = styled.div`\n  width: 100%;\n  height: 60%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst BigCardTitle = styled.h3`\n  color: ${(props) => props.theme.white.lightWhite};\n  font-size: 1rem;\n  padding: 1rem;\n  position: relative;\n  top: -3rem;\n`;\n\nconst BigCardOverview = styled.p`\n  font-size: 0.8rem;\n  opacity: 0.6;\n  padding: 1rem;\n  color: ${(props) => props.theme.white.lightWhite};\n  position: relative;\n  top: -3rem;\n`;\n\n// for Animation\nconst rowVariants: Variants = {\n  hidden: {\n    x: window.innerWidth * 1.004,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -(window.innerWidth * 0.996),\n  },\n};\n\nconst BoxVariants: Variants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -window.innerHeight * 0.03,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nconst CardInfoVariants: Variants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nfunction Home() {\n  const navigate = useNavigate();\n  const CardMovieMatch = useMatch(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery([\"movies\", \"nowPlaying\"], getMovies);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const increaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      setLeaving(true);\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset);\n      setIndex((prev) => (prev === maxIndex - 1 ? (prev = 0) : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    navigate(`movies/${movieId}`);\n  };\n  const onOverlayClick = () => {\n    navigate(-1);\n  };\n  const clickedCard =\n    CardMovieMatch?.params.movieId &&\n    data?.results.find((movie) => movie.id === +CardMovieMatch.params.movieId!);\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={increaseIndex}\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{data?.results[0].title}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                transition={{ type: \"tween\", duration: 0.7 }}\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      onClick={() => onBoxClicked(movie.id)}\n                      variants={BoxVariants}\n                      initial=\"normal\"\n                      whileHover=\"hover\"\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\" || \"\")}\n                    >\n                      <CardInfo variants={CardInfoVariants}>\n                        <h4>{movie.title}</h4>\n                      </CardInfo>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {CardMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n                <BigCard\n                  style={{ top: scrollY.get() + 50 }}\n                  layoutId={CardMovieMatch.params.movieId}\n                >\n                  {clickedCard ? (\n                    <>\n                      <BigCardCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black,transparent), url(${makeImagePath(\n                            clickedCard.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigCardTitle>{clickedCard.title}</BigCardTitle>\n                      <BigCardOverview>{clickedCard.overview}</BigCardOverview>\n                    </>\n                  ) : null}\n                </BigCard>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Home;\n","const API_KEY = \"e9658b7e9fde9f5a87597714d40bf19c\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\nexport interface MoviesData {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\nexport interface GetMoViesApi<T> {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: T;\n  total_pages: number;\n  total_results: number;\n}\n\nexport async function getMovies(): Promise<GetMoViesApi<MoviesData[]>> {\n  const request = await fetch(\n    `${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`\n  );\n  const response = await request.json();\n  return response;\n}\n","export function makeImagePath(id: string, format = \"original\") {\n  return `https://image.tmdb.org/t/p/${format}/${id}`;\n}\n","import { useLocation } from \"react-router\";\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n  return <div style={{ position: \"fixed\", top: 100 }}>{keyword}</div>;\n}\n\nexport default Search;\n","function Tv() {\n  return <div style={{ position: \"fixed\", top: 100 }}>Tv Page</div>;\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/TV\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />}>\n          <Route path=\"movies/:movieId\" element={<Home />} />\n        </Route>\n        <Route path=\"/tv\" element={<Tv />}></Route>\n        <Route path=\"/search\" element={<Search />}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { darkTheme } from \"./theme\";\n\n// reset styles\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nhtml {\n  font-size: max(2vmax, 20px);\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  line-height: 1.2;\n  color: ${(props) => props.theme.white.darkWhite};\n  background-color: black\n}\na {\n  text-decoration: none;\n  color: inherit\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={darkTheme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    deepDark: \"#141414\",\n    dark: \"#181818\",\n    lightDark: \"#2F2F2F\",\n  },\n  white: {\n    lightWhite: \"#fff\",\n    darkWhite: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}