{"version":3,"sources":["api.ts","theme.ts","atoms.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Price.tsx","Router.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","darkTheme","bgColor","bgOpacityColor","textColor","accentColor","accentColor2","bgAccentColor","bgAccentColor2","lightTheme","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","theme","coinId","useParams","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","mode","colors","chart","height","width","background","stroke","curve","yaxis","show","xaxis","labels","axisTicks","axisBorder","color","categories","time_close","slice","fill","gradient","gradientToColors","stops","tooltip","y","formatter","value","toFixed","Container","styled","div","Loader","span","props","Header","header","GoBack","h1","Title","ToggleMode","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","setDarkAtom","useSetRecoilState","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinPrice","priceLoading","priceData","loading","Helmet","to","onClick","prev","rank","symbol","quotes","USD","description","total_supply","max_supply","id","CoinsList","ul","li","Img","img","Coins","coin","alt","src","toLocaleLowerCase","Price","Router","path","element","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.6ac122f7.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\n// All Coins\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\n// Coin Info\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\n// Coin Price\nexport function fetchCoinPrice(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\n// Coin History (4 weeks)\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 28; // 28 days\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#222222\",\n  bgOpacityColor: \"#111111\",\n  textColor: \" #F1F2F6\",\n  accentColor: \"#00C896\",\n  accentColor2: \"#FF00FF\",\n  bgAccentColor: \"#9DE5D3\",\n  bgAccentColor2: \"#F5B8F5\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#F1F2F6\",\n  bgOpacityColor: \"#DFDEE1\",\n  textColor: \" #222222\",\n  accentColor: \"#FF00FF\",\n  accentColor2: \"#00C896\",\n  bgAccentColor: \"#F5B8F5\",\n  bgAccentColor2: \"#9DE5D3\",\n};\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { darkTheme, lightTheme } from \"../theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface CoinHistoryData {\n  time_open: \"string\";\n  time_close: \"string\";\n  open: number;\n  close: number;\n  high: number;\n  low: number;\n  market_cap: number;\n  volume: number;\n}\n\nfunction Chart() {\n  const isDark = useRecoilValue(isDarkAtom);\n\n  const theme = isDark ? darkTheme : lightTheme;\n  const { coinId } = useParams();\n  const { isLoading, data } = useQuery<CoinHistoryData[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId!),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            colors: [`${theme.accentColor}`],\n            chart: {\n              height: 300,\n              width: 500,\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"stepline\",\n              width: 3,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              labels: {\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n              axisBorder: {\n                color: `${theme.accentColor2}`,\n              },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close.slice(0, 10)),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: {\n                gradientToColors: [`${theme.accentColor2}`],\n                stops: [0, 100],\n              },\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(3)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Outlet, useLocation, useParams } from \"react-router\";\nimport { Link, useMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinPrice } from \"../api\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0 1rem;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst Loader = styled.span`\n  display: flex;\n  justify-content: center;\n  font-size: max(min(1.5rem, 20px), 15px);\n  color: ${(props) => props.theme.accentColor2};\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst GoBack = styled.h1`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor2};\n`;\n\nconst Title = styled.h1`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst ToggleMode = styled.span`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor2};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.bgOpacityColor};\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  span {\n    font-size: max(min(1.5rem, 20px), 15px);\n    color: ${(props) => props.theme.accentColor};\n  }\n  span:first-child {\n    font-size: max(min(1rem, 15px), 12px);\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 0.5rem;\n    color: ${(props) => props.theme.accentColor2};\n  }\n`;\n\nconst Description = styled.p`\n  margin: 1rem 0;\n  font-size: max(min(1.5rem, 20px), 15px);\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 2rem 0;\n  gap: 1rem;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: max(min(1rem, 15px), 12px);\n  font-weight: 400;\n  background-color: ${(props) => props.theme.bgOpacityColor};\n  padding: 1rem 0;\n  border-radius: 1rem;\n  color: ${(props) => props.theme.accentColor2};\n  a {\n    display: block;\n    text-decoration: ${(props) => (props.isActive ? \"underline\" : \"none\")};\n  }\n`;\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const isDark = useRecoilValue(isDarkAtom);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n\n  const { coinId } = useParams();\n  const { state } = useLocation();\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId!),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const { isLoading: priceLoading, data: priceData } = useQuery<PriceData>(\n    [\"price\", coinId],\n    () => fetchCoinPrice(coinId!)\n  );\n\n  const loading = infoLoading || priceLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to=\"/\">\n          <GoBack>&larr;</GoBack>\n        </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n        <ToggleMode onClick={toggleDarkAtom}>{isDark ? \"🌞\" : \"🌚\"}</ToggleMode>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${priceData?.quotes.USD.price.toFixed(4)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{priceData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{priceData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to=\"chart\" state={{ id: coinId }}>\n                Chart\n              </Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to=\"price\">Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Outlet />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0 1rem;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Loader = styled.span`\n  display: flex;\n  justify-content: center;\n  font-size: max(min(1.5rem, 20px), 15px);\n  color: ${(props) => props.theme.accentColor2};\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor};\n  font-weight: 600;\n`;\n\nconst ToggleMode = styled.span`\n  font-size: max(min(3rem, 40px), 20px);\n  color: ${(props) => props.theme.accentColor2};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.bgAccentColor2};\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 1rem;\n  margin-bottom: 0.5rem;\n  font-size: max(min(1.5rem, 20px), 15px);\n  a {\n    transition: color 0.1s ease-in-out;\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    font-weight: 600;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor2};\n    }\n  }\n`;\n\nconst Img = styled.img`\n  width: 2rem;\n  height: 2rem;\n  min-width: 30px;\n  min-height: 30px;\n  margin-right: 0.5rem;\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const isDark = useRecoilValue(isDarkAtom);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Crypto Coin</title>\n      </Helmet>\n      <Header>\n        <Title>Crypto Coin</Title>\n        <ToggleMode onClick={toggleDarkAtom}>{isDark ? \"🌞\" : \"🌚\"}</ToggleMode>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={`coins/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  alt={coin.name}\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLocaleLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","function Price() {\n  return <h1>Price Screen</h1>;\n}\n\nexport default Price;\n","import { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Chart from \"./routes/Chart\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\nimport Price from \"./routes/Price\";\n\n\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Coins  />} />\n        <Route path=\"/coins/:coinId/\" element={<Coin  />}>\n          <Route path=\"chart\" element={<Chart />} />\n          <Route path=\"price\" element={<Price />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\n// reset styles\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nhtml {\n  font-size: 2vmin;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}